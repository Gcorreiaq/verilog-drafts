$date
	Sun Nov 20 02:05:22 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module main $end
$var wire 32 ! s [31:0] $end
$var wire 1 " cout $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$scope module uuf $end
$var wire 32 % a [31:0] $end
$var wire 32 & b [31:0] $end
$var wire 1 " cout $end
$var wire 32 ' s [31:0] $end
$var parameter 32 ( N $end
$scope begin genblk1[0] $end
$var parameter 2 ) i $end
$scope module a0 $end
$var wire 4 * a [3:0] $end
$var wire 4 + b [3:0] $end
$var wire 1 , cin $end
$var wire 1 - cout $end
$var wire 4 . g [3:0] $end
$var wire 4 / p [3:0] $end
$var wire 4 0 s [3:0] $end
$var wire 4 1 cout0 [3:0] $end
$var wire 4 2 c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 3 i $end
$scope module fa $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 9 i $end
$scope module fa $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 ? i $end
$scope module fa $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 B cin $end
$var wire 1 C cout $end
$var wire 1 D s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 E i $end
$scope module fa $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H cin $end
$var wire 1 I cout $end
$var wire 1 J s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 K i $end
$scope module a0 $end
$var wire 4 L a [3:0] $end
$var wire 4 M b [3:0] $end
$var wire 1 - cin $end
$var wire 1 N cout $end
$var wire 4 O g [3:0] $end
$var wire 4 P p [3:0] $end
$var wire 4 Q s [3:0] $end
$var wire 4 R cout0 [3:0] $end
$var wire 4 S c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 T i $end
$scope module fa $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 W cin $end
$var wire 1 X cout $end
$var wire 1 Y s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 Z i $end
$scope module fa $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 ] cin $end
$var wire 1 ^ cout $end
$var wire 1 _ s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 ` i $end
$scope module fa $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 c cin $end
$var wire 1 d cout $end
$var wire 1 e s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 f i $end
$scope module fa $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 i cin $end
$var wire 1 j cout $end
$var wire 1 k s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 l i $end
$scope module a0 $end
$var wire 4 m a [3:0] $end
$var wire 4 n b [3:0] $end
$var wire 1 N cin $end
$var wire 1 o cout $end
$var wire 4 p g [3:0] $end
$var wire 4 q p [3:0] $end
$var wire 4 r s [3:0] $end
$var wire 4 s cout0 [3:0] $end
$var wire 4 t c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 u i $end
$scope module fa $end
$var wire 1 v a $end
$var wire 1 w b $end
$var wire 1 x cin $end
$var wire 1 y cout $end
$var wire 1 z s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 { i $end
$scope module fa $end
$var wire 1 | a $end
$var wire 1 } b $end
$var wire 1 ~ cin $end
$var wire 1 !" cout $end
$var wire 1 "" s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 #" i $end
$scope module fa $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 &" cin $end
$var wire 1 '" cout $end
$var wire 1 (" s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 )" i $end
$scope module fa $end
$var wire 1 *" a $end
$var wire 1 +" b $end
$var wire 1 ," cin $end
$var wire 1 -" cout $end
$var wire 1 ." s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 /" i $end
$scope module a0 $end
$var wire 4 0" a [3:0] $end
$var wire 4 1" b [3:0] $end
$var wire 1 o cin $end
$var wire 1 2" cout $end
$var wire 4 3" g [3:0] $end
$var wire 4 4" p [3:0] $end
$var wire 4 5" s [3:0] $end
$var wire 4 6" cout0 [3:0] $end
$var wire 4 7" c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 8" i $end
$scope module fa $end
$var wire 1 9" a $end
$var wire 1 :" b $end
$var wire 1 ;" cin $end
$var wire 1 <" cout $end
$var wire 1 =" s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 >" i $end
$scope module fa $end
$var wire 1 ?" a $end
$var wire 1 @" b $end
$var wire 1 A" cin $end
$var wire 1 B" cout $end
$var wire 1 C" s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 D" i $end
$scope module fa $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 G" cin $end
$var wire 1 H" cout $end
$var wire 1 I" s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 J" i $end
$scope module fa $end
$var wire 1 K" a $end
$var wire 1 L" b $end
$var wire 1 M" cin $end
$var wire 1 N" cout $end
$var wire 1 O" s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 P" i $end
$scope module a0 $end
$var wire 4 Q" a [3:0] $end
$var wire 4 R" b [3:0] $end
$var wire 1 2" cin $end
$var wire 1 S" cout $end
$var wire 4 T" g [3:0] $end
$var wire 4 U" p [3:0] $end
$var wire 4 V" s [3:0] $end
$var wire 4 W" cout0 [3:0] $end
$var wire 4 X" c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 Y" i $end
$scope module fa $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 \" cin $end
$var wire 1 ]" cout $end
$var wire 1 ^" s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 _" i $end
$scope module fa $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 b" cin $end
$var wire 1 c" cout $end
$var wire 1 d" s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 e" i $end
$scope module fa $end
$var wire 1 f" a $end
$var wire 1 g" b $end
$var wire 1 h" cin $end
$var wire 1 i" cout $end
$var wire 1 j" s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 k" i $end
$scope module fa $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 n" cin $end
$var wire 1 o" cout $end
$var wire 1 p" s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 q" i $end
$scope module a0 $end
$var wire 4 r" a [3:0] $end
$var wire 4 s" b [3:0] $end
$var wire 1 S" cin $end
$var wire 1 t" cout $end
$var wire 4 u" g [3:0] $end
$var wire 4 v" p [3:0] $end
$var wire 4 w" s [3:0] $end
$var wire 4 x" cout0 [3:0] $end
$var wire 4 y" c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 z" i $end
$scope module fa $end
$var wire 1 {" a $end
$var wire 1 |" b $end
$var wire 1 }" cin $end
$var wire 1 ~" cout $end
$var wire 1 !# s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 "# i $end
$scope module fa $end
$var wire 1 ## a $end
$var wire 1 $# b $end
$var wire 1 %# cin $end
$var wire 1 &# cout $end
$var wire 1 '# s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 (# i $end
$scope module fa $end
$var wire 1 )# a $end
$var wire 1 *# b $end
$var wire 1 +# cin $end
$var wire 1 ,# cout $end
$var wire 1 -# s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 .# i $end
$scope module fa $end
$var wire 1 /# a $end
$var wire 1 0# b $end
$var wire 1 1# cin $end
$var wire 1 2# cout $end
$var wire 1 3# s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 4# i $end
$scope module a0 $end
$var wire 4 5# a [3:0] $end
$var wire 4 6# b [3:0] $end
$var wire 1 t" cin $end
$var wire 1 7# cout $end
$var wire 4 8# g [3:0] $end
$var wire 4 9# p [3:0] $end
$var wire 4 :# s [3:0] $end
$var wire 4 ;# cout0 [3:0] $end
$var wire 4 <# c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 =# i $end
$scope module fa $end
$var wire 1 ># a $end
$var wire 1 ?# b $end
$var wire 1 @# cin $end
$var wire 1 A# cout $end
$var wire 1 B# s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 C# i $end
$scope module fa $end
$var wire 1 D# a $end
$var wire 1 E# b $end
$var wire 1 F# cin $end
$var wire 1 G# cout $end
$var wire 1 H# s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 I# i $end
$scope module fa $end
$var wire 1 J# a $end
$var wire 1 K# b $end
$var wire 1 L# cin $end
$var wire 1 M# cout $end
$var wire 1 N# s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 O# i $end
$scope module fa $end
$var wire 1 P# a $end
$var wire 1 Q# b $end
$var wire 1 R# cin $end
$var wire 1 S# cout $end
$var wire 1 T# s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 U# i $end
$scope module a0 $end
$var wire 4 V# a [3:0] $end
$var wire 4 W# b [3:0] $end
$var wire 1 7# cin $end
$var wire 1 X# cout $end
$var wire 4 Y# g [3:0] $end
$var wire 4 Z# p [3:0] $end
$var wire 4 [# s [3:0] $end
$var wire 4 \# cout0 [3:0] $end
$var wire 4 ]# c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ^# i $end
$scope module fa $end
$var wire 1 _# a $end
$var wire 1 `# b $end
$var wire 1 a# cin $end
$var wire 1 b# cout $end
$var wire 1 c# s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 d# i $end
$scope module fa $end
$var wire 1 e# a $end
$var wire 1 f# b $end
$var wire 1 g# cin $end
$var wire 1 h# cout $end
$var wire 1 i# s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 j# i $end
$scope module fa $end
$var wire 1 k# a $end
$var wire 1 l# b $end
$var wire 1 m# cin $end
$var wire 1 n# cout $end
$var wire 1 o# s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 p# i $end
$scope module fa $end
$var wire 1 q# a $end
$var wire 1 r# b $end
$var wire 1 s# cin $end
$var wire 1 t# cout $end
$var wire 1 u# s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 p#
b10 j#
b1 d#
b0 ^#
b111 U#
b11 O#
b10 I#
b1 C#
b0 =#
b110 4#
b11 .#
b10 (#
b1 "#
b0 z"
b101 q"
b11 k"
b10 e"
b1 _"
b0 Y"
b100 P"
b11 J"
b10 D"
b1 >"
b0 8"
b11 /"
b11 )"
b10 #"
b1 {
b0 u
b10 l
b11 f
b10 `
b1 Z
b0 T
b1 K
b11 E
b10 ?
b1 9
b0 3
b0 )
b100000 (
$end
#0
$dumpvars
0u#
0t#
0s#
0r#
0q#
0o#
0n#
0m#
0l#
0k#
0i#
0h#
0g#
0f#
0e#
0c#
0b#
0a#
0`#
0_#
b0 ]#
b0 \#
b0 [#
b0 Z#
b0 Y#
0X#
b0 W#
b0 V#
0T#
0S#
0R#
0Q#
0P#
0N#
0M#
0L#
0K#
0J#
0H#
0G#
0F#
0E#
0D#
0B#
0A#
0@#
0?#
0>#
b0 <#
b0 ;#
b0 :#
b0 9#
b0 8#
07#
b0 6#
b0 5#
03#
02#
01#
00#
0/#
0-#
0,#
0+#
0*#
0)#
0'#
0&#
0%#
0$#
0##
0!#
0~"
0}"
0|"
0{"
b0 y"
b0 x"
b0 w"
b0 v"
b0 u"
0t"
b0 s"
b0 r"
0p"
0o"
0n"
0m"
0l"
0j"
0i"
0h"
0g"
0f"
0d"
0c"
0b"
0a"
0`"
0^"
0]"
0\"
0["
0Z"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
0S"
b0 R"
b0 Q"
0O"
0N"
0M"
0L"
0K"
0I"
0H"
0G"
0F"
0E"
0C"
0B"
0A"
0@"
0?"
0="
0<"
0;"
0:"
09"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
02"
b0 1"
b0 0"
0."
0-"
0,"
0+"
0*"
0("
0'"
0&"
0%"
0$"
0""
0!"
0~
0}
0|
0z
0y
0x
0w
0v
b0 t
b0 s
b0 r
b0 q
b0 p
0o
b0 n
b0 m
0k
0j
0i
0h
0g
0e
0d
0c
0b
0a
0_
0^
0]
0\
0[
0Y
0X
0W
0V
0U
b0 S
b0 R
b0 Q
b0 P
b0 O
0N
b0 M
b0 L
0J
0I
0H
0G
0F
0D
0C
0B
0A
0@
0>
0=
0<
0;
0:
08
07
06
05
04
b0 2
b0 1
b0 0
b0 /
b0 .
0-
0,
b0 +
b0 *
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#5
1e
1""
1c
1^
1~
b1 s
1y
1>
1k
1<
b1 1
17
1i
1]
1x
1X
1d
b1111 R
1j
1("
b10 2
b1010 0
1J
b1110 S
b11 t
1N
b1100 Q
0_
b11011001010 !
b11011001010 '
b110 r
0z
15
1V
1b
1h
1%"
b1 .
b1001 /
14
1F
b1101 O
b1111 P
1U
1[
1a
1g
b101 q
1v
b1 +
b1101 M
b100 n
b1001 *
b1111 L
b1 m
b10011010001 $
b10011010001 &
b111111001 #
b111111001 %
#30
