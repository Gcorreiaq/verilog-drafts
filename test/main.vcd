$date
	Sun Nov 20 18:06:39 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module main $end
$var wire 32 ! s [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$scope module uuf $end
$var wire 32 $ a [31:0] $end
$var wire 32 % b [31:0] $end
$var wire 32 & s [31:0] $end
$var wire 1 ' cout $end
$var parameter 32 ( N $end
$scope module a0 $end
$var wire 32 ) a [31:0] $end
$var wire 32 * b [31:0] $end
$var wire 1 + cin $end
$var wire 1 ' cout $end
$var wire 32 , s [31:0] $end
$var parameter 32 - N $end
$scope begin genblk1[0] $end
$var parameter 2 . i $end
$scope module a0 $end
$var wire 4 / a [3:0] $end
$var wire 4 0 b [3:0] $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 4 3 g [3:0] $end
$var wire 4 4 p [3:0] $end
$var wire 4 5 s [3:0] $end
$var wire 4 6 cout0 [3:0] $end
$var wire 4 7 c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 8 i $end
$scope module fa $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 > i $end
$scope module fa $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A cin $end
$var wire 1 B cout $end
$var wire 1 C s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 D i $end
$scope module fa $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 G cin $end
$var wire 1 H cout $end
$var wire 1 I s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 J i $end
$scope module fa $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M cin $end
$var wire 1 N cout $end
$var wire 1 O s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 P i $end
$scope module a0 $end
$var wire 4 Q a [3:0] $end
$var wire 4 R b [3:0] $end
$var wire 1 2 cin $end
$var wire 1 S cout $end
$var wire 4 T g [3:0] $end
$var wire 4 U p [3:0] $end
$var wire 4 V s [3:0] $end
$var wire 4 W cout0 [3:0] $end
$var wire 4 X c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 Y i $end
$scope module fa $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ cin $end
$var wire 1 ] cout $end
$var wire 1 ^ s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 _ i $end
$scope module fa $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 b cin $end
$var wire 1 c cout $end
$var wire 1 d s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 e i $end
$scope module fa $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h cin $end
$var wire 1 i cout $end
$var wire 1 j s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 k i $end
$scope module fa $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 n cin $end
$var wire 1 o cout $end
$var wire 1 p s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 q i $end
$scope module a0 $end
$var wire 4 r a [3:0] $end
$var wire 4 s b [3:0] $end
$var wire 1 S cin $end
$var wire 1 t cout $end
$var wire 4 u g [3:0] $end
$var wire 4 v p [3:0] $end
$var wire 4 w s [3:0] $end
$var wire 4 x cout0 [3:0] $end
$var wire 4 y c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 z i $end
$scope module fa $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 } cin $end
$var wire 1 ~ cout $end
$var wire 1 !" s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 "" i $end
$scope module fa $end
$var wire 1 #" a $end
$var wire 1 $" b $end
$var wire 1 %" cin $end
$var wire 1 &" cout $end
$var wire 1 '" s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 (" i $end
$scope module fa $end
$var wire 1 )" a $end
$var wire 1 *" b $end
$var wire 1 +" cin $end
$var wire 1 ," cout $end
$var wire 1 -" s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 ." i $end
$scope module fa $end
$var wire 1 /" a $end
$var wire 1 0" b $end
$var wire 1 1" cin $end
$var wire 1 2" cout $end
$var wire 1 3" s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 4" i $end
$scope module a0 $end
$var wire 4 5" a [3:0] $end
$var wire 4 6" b [3:0] $end
$var wire 1 t cin $end
$var wire 1 7" cout $end
$var wire 4 8" g [3:0] $end
$var wire 4 9" p [3:0] $end
$var wire 4 :" s [3:0] $end
$var wire 4 ;" cout0 [3:0] $end
$var wire 4 <" c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 =" i $end
$scope module fa $end
$var wire 1 >" a $end
$var wire 1 ?" b $end
$var wire 1 @" cin $end
$var wire 1 A" cout $end
$var wire 1 B" s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 C" i $end
$scope module fa $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" cin $end
$var wire 1 G" cout $end
$var wire 1 H" s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 I" i $end
$scope module fa $end
$var wire 1 J" a $end
$var wire 1 K" b $end
$var wire 1 L" cin $end
$var wire 1 M" cout $end
$var wire 1 N" s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 O" i $end
$scope module fa $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 R" cin $end
$var wire 1 S" cout $end
$var wire 1 T" s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 U" i $end
$scope module a0 $end
$var wire 4 V" a [3:0] $end
$var wire 4 W" b [3:0] $end
$var wire 1 7" cin $end
$var wire 1 X" cout $end
$var wire 4 Y" g [3:0] $end
$var wire 4 Z" p [3:0] $end
$var wire 4 [" s [3:0] $end
$var wire 4 \" cout0 [3:0] $end
$var wire 4 ]" c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ^" i $end
$scope module fa $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 a" cin $end
$var wire 1 b" cout $end
$var wire 1 c" s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 d" i $end
$scope module fa $end
$var wire 1 e" a $end
$var wire 1 f" b $end
$var wire 1 g" cin $end
$var wire 1 h" cout $end
$var wire 1 i" s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 j" i $end
$scope module fa $end
$var wire 1 k" a $end
$var wire 1 l" b $end
$var wire 1 m" cin $end
$var wire 1 n" cout $end
$var wire 1 o" s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 p" i $end
$scope module fa $end
$var wire 1 q" a $end
$var wire 1 r" b $end
$var wire 1 s" cin $end
$var wire 1 t" cout $end
$var wire 1 u" s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 v" i $end
$scope module a0 $end
$var wire 4 w" a [3:0] $end
$var wire 4 x" b [3:0] $end
$var wire 1 X" cin $end
$var wire 1 y" cout $end
$var wire 4 z" g [3:0] $end
$var wire 4 {" p [3:0] $end
$var wire 4 |" s [3:0] $end
$var wire 4 }" cout0 [3:0] $end
$var wire 4 ~" c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 !# i $end
$scope module fa $end
$var wire 1 "# a $end
$var wire 1 ## b $end
$var wire 1 $# cin $end
$var wire 1 %# cout $end
$var wire 1 &# s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 '# i $end
$scope module fa $end
$var wire 1 (# a $end
$var wire 1 )# b $end
$var wire 1 *# cin $end
$var wire 1 +# cout $end
$var wire 1 ,# s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 -# i $end
$scope module fa $end
$var wire 1 .# a $end
$var wire 1 /# b $end
$var wire 1 0# cin $end
$var wire 1 1# cout $end
$var wire 1 2# s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 3# i $end
$scope module fa $end
$var wire 1 4# a $end
$var wire 1 5# b $end
$var wire 1 6# cin $end
$var wire 1 7# cout $end
$var wire 1 8# s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 9# i $end
$scope module a0 $end
$var wire 4 :# a [3:0] $end
$var wire 4 ;# b [3:0] $end
$var wire 1 y" cin $end
$var wire 1 <# cout $end
$var wire 4 =# g [3:0] $end
$var wire 4 ># p [3:0] $end
$var wire 4 ?# s [3:0] $end
$var wire 4 @# cout0 [3:0] $end
$var wire 4 A# c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 B# i $end
$scope module fa $end
$var wire 1 C# a $end
$var wire 1 D# b $end
$var wire 1 E# cin $end
$var wire 1 F# cout $end
$var wire 1 G# s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 H# i $end
$scope module fa $end
$var wire 1 I# a $end
$var wire 1 J# b $end
$var wire 1 K# cin $end
$var wire 1 L# cout $end
$var wire 1 M# s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 N# i $end
$scope module fa $end
$var wire 1 O# a $end
$var wire 1 P# b $end
$var wire 1 Q# cin $end
$var wire 1 R# cout $end
$var wire 1 S# s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 T# i $end
$scope module fa $end
$var wire 1 U# a $end
$var wire 1 V# b $end
$var wire 1 W# cin $end
$var wire 1 X# cout $end
$var wire 1 Y# s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 Z# i $end
$scope module a0 $end
$var wire 4 [# a [3:0] $end
$var wire 4 \# b [3:0] $end
$var wire 1 <# cin $end
$var wire 1 ]# cout $end
$var wire 4 ^# g [3:0] $end
$var wire 4 _# p [3:0] $end
$var wire 4 `# s [3:0] $end
$var wire 4 a# cout0 [3:0] $end
$var wire 4 b# c0 [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 c# i $end
$scope module fa $end
$var wire 1 d# a $end
$var wire 1 e# b $end
$var wire 1 f# cin $end
$var wire 1 g# cout $end
$var wire 1 h# s $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 i# i $end
$scope module fa $end
$var wire 1 j# a $end
$var wire 1 k# b $end
$var wire 1 l# cin $end
$var wire 1 m# cout $end
$var wire 1 n# s $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 o# i $end
$scope module fa $end
$var wire 1 p# a $end
$var wire 1 q# b $end
$var wire 1 r# cin $end
$var wire 1 s# cout $end
$var wire 1 t# s $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 u# i $end
$scope module fa $end
$var wire 1 v# a $end
$var wire 1 w# b $end
$var wire 1 x# cin $end
$var wire 1 y# cout $end
$var wire 1 z# s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 u#
b10 o#
b1 i#
b0 c#
b111 Z#
b11 T#
b10 N#
b1 H#
b0 B#
b110 9#
b11 3#
b10 -#
b1 '#
b0 !#
b101 v"
b11 p"
b10 j"
b1 d"
b0 ^"
b100 U"
b11 O"
b10 I"
b1 C"
b0 ="
b11 4"
b11 ."
b10 ("
b1 ""
b0 z
b10 q
b11 k
b10 e
b1 _
b0 Y
b1 P
b11 J
b10 D
b1 >
b0 8
b0 .
b100000 -
b100000 (
$end
#0
$dumpvars
0z#
1y#
1x#
1w#
0v#
0t#
1s#
1r#
1q#
0p#
0n#
1m#
1l#
1k#
0j#
0h#
1g#
1f#
1e#
0d#
b1111 b#
b1111 a#
b0 `#
b1111 _#
b0 ^#
1]#
b1111 \#
b0 [#
0Y#
1X#
1W#
1V#
0U#
0S#
1R#
1Q#
1P#
0O#
0M#
1L#
1K#
1J#
0I#
0G#
1F#
1E#
1D#
0C#
b1111 A#
b1111 @#
b0 ?#
b1111 >#
b0 =#
1<#
b1111 ;#
b0 :#
08#
17#
16#
15#
04#
02#
11#
10#
1/#
0.#
0,#
1+#
1*#
1)#
0(#
0&#
1%#
1$#
1##
0"#
b1111 ~"
b1111 }"
b0 |"
b1111 {"
b0 z"
1y"
b1111 x"
b0 w"
0u"
1t"
1s"
1r"
0q"
0o"
1n"
1m"
1l"
0k"
0i"
1h"
1g"
1f"
0e"
0c"
1b"
1a"
1`"
0_"
b1111 ]"
b1111 \"
b0 ["
b1111 Z"
b0 Y"
1X"
b1111 W"
b0 V"
0T"
1S"
1R"
1Q"
0P"
0N"
1M"
1L"
1K"
0J"
0H"
1G"
1F"
1E"
0D"
0B"
1A"
1@"
1?"
0>"
b1111 <"
b1111 ;"
b0 :"
b1111 9"
b0 8"
17"
b1111 6"
b0 5"
03"
12"
11"
10"
0/"
0-"
1,"
1+"
1*"
0)"
0'"
1&"
1%"
1$"
0#"
0!"
1~
1}
1|
0{
b1111 y
b1111 x
b0 w
b1111 v
b0 u
1t
b1111 s
b0 r
0p
1o
1n
1m
0l
0j
1i
1h
1g
0f
0d
1c
1b
1a
0`
0^
1]
1\
1[
0Z
b1111 X
b1111 W
b0 V
b1111 U
b0 T
1S
b1111 R
b0 Q
0O
1N
1M
1L
0K
0I
1H
1G
1F
0E
0C
1B
1A
1@
0?
0=
1<
1;
1:
09
b1111 7
b1111 6
b0 5
b1111 4
b0 3
12
11
b1111 0
b0 /
b0 ,
1+
b11111111111111111111111111111111 *
b0 )
1'
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
0@"
b1110 <"
0t
02"
13"
01"
0,"
1-"
0+"
0&"
1'"
0h
0%"
b1011 X
b1 y
1d
b1101 W
0c
b1111 w
1!"
b0 x
0~
1=
0I
b1001 5
1O
1^
b11 V
0j
0B"
b111100111001 !
b111100111001 &
b111100111001 ,
b0 :"
0H"
0F
b1101 U
0a
b1110 v
0|
0E"
b1011 0
b1101 R
b1110 s
b1101 6"
b1001 3
19
1E
1K
b101 T
1Z
1f
b1 8"
1>"
1D"
b11111111111111111101111011011011 *
b1101 /
b101 Q
b11 5"
b10000100100100 #
b10000100100100 %
b11000001011101 "
b11000001011101 $
b11000001011101 )
#30
